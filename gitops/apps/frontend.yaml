apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: frontend
  namespace: argocd
  annotations:
    argocd-image-updater.argoproj.io/image-list: ghcr.io/mrthehavok/k8s-advanced-webapp-frontend
    argocd-image-updater.argoproj.io/update-strategy: latest
    argocd-image-updater.argoproj.io/refresh: always
spec:
  project: default
  source:
    repoURL: "https://github.com/mrthehavok/k8s-advanced-webapp.git" # AIDEV-TODO: This should be dynamically discovered
    path: charts/frontend
    targetRevision: HEAD
    helm:
      releaseName: frontend
      values: |
        global:
          repositoryOwner: mrthehavok
        image:
          repository: "k8s-advanced-webapp-frontend"
          tag: latest
          pullPolicy: IfNotPresent
        service:
          type: ClusterIP
          port: 80
          targetPort: 80
        ingress:
          enabled: true
          className: nginx
          annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: "10m"
            nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
        autoscaling:
          enabled: true
          minReplicas: 2
          maxReplicas: 5
          targetCPUUtilizationPercentage: 60
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        serviceAccount:
          create: true
          name: ""
  destination:
    server: https://kubernetes.default.svc
    namespace: dev
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
